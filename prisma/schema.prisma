generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Player {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now()) @db.Timestamptz(6)
    firstName String    @db.Char(50)
    lastName  String    @db.Char(50)
    nickname  String?   @db.Char(50)
    role      Role
    teamId    Int?
    updatedAt DateTime? @updatedAt @db.Timestamptz(6)
    seasonId  Int
    plays     Play[]
    season    Season    @relation(fields: [seasonId], references: [id], onDelete: Cascade)
    team      Team?     @relation(fields: [teamId], references: [id])
}

model Team {
    id        Int       @id @default(autoincrement())
    name      String    @db.Char(50)
    createdAt DateTime  @default(now()) @db.Timestamptz(6)
    updatedAt DateTime? @updatedAt @db.Timestamptz(6)
    seasonId  Int
    color     String    @db.Char(10)
    awayGames Game[]    @relation("AwayGames")
    homeGames Game[]    @relation("HomeGames")
    players   Player[]
    season    Season    @relation(fields: [seasonId], references: [id], onDelete: Cascade)
}

model Season {
    id        Int       @id @default(autoincrement())
    endDate   DateTime? @unique @db.Date
    startDate DateTime? @unique @db.Date
    players   Player[]
    teams     Team[]
}

model Game {
    id         Int      @id @default(autoincrement())
    homeTeamId Int
    awayTeamId Int
    gameType   GameType
    timestamp  DateTime @db.Timestamptz(6)
    awayTeam   Team     @relation("AwayGames", fields: [awayTeamId], references: [id], onDelete: Cascade)
    homeTeam   Team     @relation("HomeGames", fields: [homeTeamId], references: [id], onDelete: Cascade)
    plays      Play[]
}

model OldGame {
    id        Int      @id @default(autoincrement())
    homeTeam  String
    awayTeam  String
    homeScore Int
    awayScore Int
    timestamp DateTime @db.Timestamptz(6)
}

model Play {
    id           Int      @id @default(autoincrement())
    playerId     Int
    gameId       Int
    linkedPlayId Int?     @unique
    type         PlayType
    game         Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
    throwPlay    Play?    @relation("LinkedPlay", fields: [linkedPlayId], references: [id])
    catchPlay    Play?    @relation("LinkedPlay")
    player       Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
}

enum Role {
    Player
    Captain
    Substitute
}

enum GameType {
    Regular
    Playoff
}

enum PlayType {
    GoalThrown
    GoalCaught
    DefensivePlay
}
